#!/bin/bash
#
# Written by Barry Kelly, 15 January 2004
#

function usage
{
	cat << __syntax 
Renames files to format 001.ext, etc.

usage: $(basename $0) [options] <files>
Renames files using a number scheme.
Options:
    -n <basename>  Prepend 'basename' before filenames.
    -v             Verbose mode: print each rename operation.
    -s             Use slow rename technique.
    
    If '-' is specified as the file, files to renumber are read from standard input.
__syntax
	exit 1
}

num=1
base_name=
verbose=0
slow_rename=0

function process # filename
{
    local ext old_name new_name
	
    old_name="$1"
    
    ext="${old_name##*.}"
    if [ "$old_name" == "$ext" ]; then
        ext=""
    else
        ext=".$ext"
    fi
	
	while true; do
	    new_name=$(printf '%s%.4d%s' "$base_name" $num "$ext")
	    let ++num
	    test "$old_name" == "$new_name" && continue
	    test -e "$new_name" && continue
	    break
	done
	
    (( verbose )) && echo "Renaming '$OLDNAME' to '$NEWNAME'..."
    mv -i -- "$old_name" "$new_name"
}

test -n "$1" || usage

while [ -n "$1" ]; do
	case "$1" in
		-h | -H | --help)
			usage
			;;
		
		-n)
			shift
			base_name="$1"
			shift
			;;
		
		-v)
		    verbose=1
			shift
			;;
        
        -)
            while read -r line; do
                process "$line"
            done
            shift
            ;;
        
		*)
		    if [ -e "$1" ]; then
    		    process "$1"
            fi
		    shift
			;;
	esac
done
