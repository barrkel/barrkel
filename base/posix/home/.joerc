
                         Initialization file for JOE
                                Standard Joe

 JOE looks for this file in:
	1 - $HOME/.joerc
	2 - /usr/share/joe/joerc

 This file can include other files by placing the following include command
 in the first column:

 :include filename

 FIRST SECTION: Default global options (these options can also be specified
 on the command line.  Also the NOXON, LINES, COLUMNS, DOPADDING and BAUD
 options can be specified in environment variables):

 Override colors of lexical classes specified in syntax files:
 Put each color override you want in the first column.

 Valid colors:
   bold inverse blink dim underline
   white cyan magenta blue yellow green red black
   bg_white bg_cyan bg_magenta bg_blue bg_yellow bg_green bg_red bg_black

 Other colors are available: see syntax/c.jsf for documentation.

 Override all instances of class Idle:
   =Idle red

 Override Idle only for c syntax file:
   =c.Idle red

 The colors

 =AddLine 
 =Attr
 =Bad
=Brace bold white
 =CdataBody
 =CdataEnd
 =CdataStart

=Comment bold green

 =CommentBody
 =CommentEnd
 =CommentStart
 =Constant
 =Control

=CppKeyword blue

 =Decl
 =Define
 =DelLine
 =DiffStuff
 =DocEscape
 =Docstring
 =EString
 =EntityRef
 =Error
 =Escape
 =FileNew
 =FileOld
 =Function
 =HTML
 =Idle
 =IncLocal
 =IncSystem

=Keyword blue
=Operator bold white

 =PIBody
 =PIEnd
 =PIStart
=Preproc bold gray

=String green

 =StringControl
 =Tag
=Type blue
 =Unchanged
=Var bold gray

 Put each option you want set in the first column:

 -option	Sets the option
 --option	Clears the option

 -help_is_utf8	Set if help text is in UTF-8 format.  Leave clear if it's a raw 8-bit format.

 -mid		Cursor is recentered when scrolling is necessary

 -marking	Text between ^KB and cursor is highlighted (use with -lightoff)

 -asis		Characters 128 - 255 shown as-is

 -force		Force final newline when files are saved

 -nolocks	If you don't want file locks to be used

 -nomodcheck	Disable periodic checking of disk file newer than buffer
		(this checking happens on save even with this option).

 -nocurdir	Do not prompt with current directory

 -nobackups	If you don't want backup files to be created

 -break_links	Delete file before writing, to break hard links

 -lightoff	Turn off highlighting after block copy or move

 -exask		^KX always confirms file name

 -beep		Beep on errors and when cursor goes past extremes

 -nosta		Disable top-most status line

 -keepup	%k and %c status line escape sequences updated frequently

 -pg nnn	No. lines to keep for PgUp/PgDn

 -undo_keep nnn	Number of undo records to keep.  0 for infinite.

 -csmode	^KF after a pervious search does a ^L instead

 -backpath path
		Directory to store backup files (one space between
		'backpath' and the 'path', no trailing spaces or comments
		after the path).

 -floatmouse	Clicking past end of line moves the cursor past the end
 
 -rtbutton	Use the right mouse button for action, instead of the left

 -nonotice	Disable copyright notice

 -noxon		Attempt to turn off ^S/^Q processing

 -orphan	Put extra files given on command line in orphaned buffers
		instead of in windows

 -dopadding	Output pad characters (for when there is no tty handshaking)

 -lines nnn	Set no. screen lines

 -baud nnn	Set baud rate for terminal optimizations

 -columns nnn	Set no. screen columns

 -help		Start with help on

 -skiptop nnn	Don't use top nnn lines of the screen

 -notite        Don't send terminal initialization and termination strings:
                prevents restoration of screen on exit.

 -usetabs       Use tabs to help optimize screen update.

-assume_color	Assume terminal has ANSI color support even if termcap/terminfo entry
		says that it doesn't.  This only applies if the terminal otherwise
		looks like an ANSI terminal (support bold and capability starts with
		ESC [).

-assume_256color
		Assume terminal has xterm 256 color support (ESC [ 38 ; 5 ; NNN m and
                ESC [ 48 ; 5 ; NNN m).

-guess_non_utf8	Allow guess of non-UTF-8 file encoding in a UTF-8 locale.

 -guess_utf8	Allow guess of UTF-8 file encoding in non-UTF-8 locale.

-guess_crlf     Automatically detect MS-DOS files and set -crlf appropriately

 -guess_indent	Guess indent character (tab or space).

-menu_above	Position menu/list above prompt when enabled.  Otherwise position
		below prompt.

-transpose	Transpose rows with columns in all menus.

 -menu_explorer	Stay in menu system when a directory is selected (otherwise
                directory is added to path and menu is closed).

 -menu_jump	Jump into file selection menu when tab is hit (otherwise, menu
		comes up, but cursor stays in file name prompt).

 -icase         Search is case insensitive by default.

 -wrap          Search wraps

 -autoswap	Swap markb with markk when necessary

-joe_state     Use ~/.joe_state file

 -mouse		Enable xterm mouse support.  When enabled, left-click will
		position the cursor and left-click-drag will select blocks
		For normal xterm cut and paste, hold the shift key down.

 -joexterm	If you are using XTerm version 212 or higher, and if it was
		configured with --enable-paste64, set this flag: it allows
		mouse cut & paste to work properly (text selected with the
		mouse can be pasted into other application, and middle
		button clicks paste into JOE).

 -square	Rectangular block mode

 -text_color color
		Set color for text.
 -status_color color
		Set color for status bar.
 -help_color color
		Set color for help.
 -menu_color color
		Set color for menus.
 -prompt_color color
		Set color for prompts.
 -msg_color color
		Set color for messages.

		For example: -text_color bg_blue+white
		Sets the background color to blue and foreground color to white.

-restore	Restore previous cursor position when files are opened

-search_prompting
		Search prompts with previous search request.

 Status line definition strings.  -lmsg defines the left-justified string and
 -rmsg defines the right-justified string.  The first character of -rmsg is
 the background fill character.  The following escape sequences can be used
 in these strings:

  %t  12 hour time
  %u  24 hour time
  %T  O for overtype mode, I for insert mode
  %W  W if wordwrap is enabled
  %I  A if autoindent is enabled
  %X  Rectangle mode indicator
  %n  File name
  %m  '(Modified)' if file has been changed
  %*  '*' if file has been changed
  %R  Read-only indicator
  %r  Row (line) number
  %c  Column number
  %o  Byte offset into file
  %O  Byte offset into file in hex
  %a  Ascii value of character under cursor
  %A  Ascii value of character under cursor in hex
  %p  Percent of file cursor is at
  %l  No. lines in file
  %k  Entered prefix keys
  %S  '*SHELL*' if there is a shell running in window
  %M  Macro recording message
  %y  Syntax
  %x  Context (first non-indented line going backwards)

 These formatting escape sequences may also be given:
 
  \i  Inverse
  \u  Underline
  \b  Bold
  \d  Dim
  \f  Blink

-lmsg \i%k%T%W%I%X %n %m%y%R %M %x
-rmsg  %S Row %r Col %c %t  Ctrl-K H for help

 SECOND SECTION: File name dependant local option settings:

 Each line with '*' in the first column indicates the modes which should be
 set for files whose name matches the regular expression.  If more than one
 regular expression matches the file name, then the last matching one is
 chosen.

 A file contents regular expression may also be specified on a separate line
 with '+regex'.  If this regular expresssion is given, then both the file name
 regex and the file contents regex must match for the options to apply.

 Here are the modes which can be set:

	-cpara >#!;*/%
				Characters which can indent paragraphs.

	-encoding name
				Set file coding (for example: utf-8, iso-8859-15)

	-syntax name
				Specify syntax (syntax file called
				'name.jsf' will be loaded)

	-hex			Hex editor mode

	-highlight		Enable highlighting

	-smarthome		Home key first moves cursor to beginning of line,
				then if hit again, to first non-blank character.

	-indentfirst		Smart home goes to first non-blank character first,
				instead of going the beginning of line first.

	-smartbacks		Backspace key deletes 'istep' number of
				'indentc's if cursor is at first non-space
				character.

	-tab nnn		Tab width

	-indentc nnn		Indentation character (32 for space, 9 for tab)

	-istep nnn		Number of indentation columns

	-spaces			TAB inserts spaces instead of tabs.

	-purify			Fix indentation if necessary for rindent, lindent and backs
				(for example if indentation uses a mix of tabs and spaces,
				and indentc is space, indentation will be converted to all
				spaces).

	-crlf			File uses CR-LF at ends of lines

	-wordwrap		Wordwrap

	-autoindent		Auto indent

	-overwrite		Overtype mode

        -picture                Picture mode (right arrow can go past end of lines)

	-lmargin nnn		Left margin

	-rmargin nnn		Right margin


	-french			One space after '.', '?' and '!' for wordwrap
				and paragraph reformat instead of two.  Joe
				does not change the spacing you give, but
				sometimes it must put spacing in itself.  This
				selects how much is inserted.

	-linums			Enable line numbers on each line

	-rdonly			File is read-only

	-keymap name
				Keymap to use if not 'main'

	-lmsg			Status line definition strings-
	-rmsg			see previous section for more info.

	-mfirst macro
				Macro to execute on first modification
	-mnew macro
				Macro to execute when new files are loaded
	-mold macro
				Macro to execute when existing files are loaded
	-msnew macro
				Macro to execute when new files are saved
	-msold macro
				Macro to execute when existing files are saved

	Macros for the above options are in the same format as in the key
	binding section below- but without the key name strings.

	These define the language syntax for ^G (goto matching delimiter):

	-single_quoted		Text between '  ' should be ignored (this is
				not good for regular text since ' is
				normally used alone as an apostrophe)

	-c_comment		Text between /* */ should be ignored

	-cpp_comment		Text after // should be ignored

	-pound_comment		Text after # should be ignored

	-vhdl_comment		Text after -- should be ignored

	-semi_comment		Text after ; should be ignored

	-text_delimiters begin=end:if=elif=else=endif

				Define word delimiters

 Default local options
-highlight
-istep 2

 Perforce macro: use this macro (put in first column) to have joe "p4 edit"
 a file you're about to change.

 -mfirst if,"rdonly && joe(sys,\"p4 edit \",name,rtn)",then,mode,"o",msg,"executed \"p4 edit ",name,"\"",rtn,endif

 File type table is now in a separate file.  You can copy this file to ~/.joe and customize it.

:include ftyperc

 THIRD SECTION: Named help screens:

 Use \i to turn on/off inverse video
 Use \u to turn on/off underline
 Use \b to turn on/off bold
 Use \d to turn on/off dim
 Use \f to turn on/off flash

 Use \| to insert a spring: all springs in a given line are set to the same
 width such that the entire line exactly fits in the width of the screen (if
 it's not an exact multiple so that there are N spaces remaining, the
 rightmost N springs each get one extra space).  Hint: if you want vertical
 alignment, each line should have the same number of springs.

 Use the '-help_is_utf8' global option to allow UTF-8 sequences in the help
 text.  Otherwise, the locale 8-bit character set is assumed.

{Basic
\i   Help Screen    \|turn off with ^KH    more help with ESC . (^[.)              \i
\i \i\|\uCURSOR\u           \|\uGO TO\u            \|\uBLOCK\u      \|\uDELETE\u   \|\uMISC\u         \|\uEXIT\u      \|\i \i
\i \i\|^B left ^F right \|^U  prev. screen \|^KB begin  \|^D char. \|^KJ reformat \|^KX save  \|\i \i
\i \i\|^P up   ^N down  \|^V  next screen  \|^KK end    \|^Y line  \|^KA center   \|^C  abort \|\i \i
\i \i\|^Z previous word \|^A  beg. of line \|^KM move   \|^W >word \|^T  options  \|^KZ shell \|\i \i
\i \i\|^X next word     \|^E  end of line  \|^KC copy   \|^O word< \|^R  refresh  \|\uFILE\u      \|\i \i
\i \i\|\uSEARCH\u           \|^KU top of file  \|^KW file   \|^J >line \|\uSPELL\u        \|^KE edit  \|\i \i
\i \i\|^KF find text    \|^KV end of file  \|^KY delete \|^_ undo  \|^[N word     \|^KR insert\|\i \i
\i \i\|^L  find next    \|^KL to line No.  \|^K/ filter \|^^ redo  \|^[L file     \|^KD save  \|\i \i
}

{Windows
\i   Help Screen    \|turn off with ^KH    prev. screen ^[,    next screen ^[.     \i
\i \i\|^KO Split the window in half           \|^KE Load file into window             \|\i \i
\i \i\|^KG Make current window bigger         \|^KT Make current window smaller       \|\i \i
\i \i\|^KN Go to the window below             \|^KP Go to the window above            \|\i \i
\i \i\|^[V Switch to next buffer              \|^[U Switch to previous buffer         \|\i \i
\i \i\|^C  Eliminate the current window       \|^KI Show all windows / Show one window\|\i \i
}

{Advanced
\i   Help Screen    \|turn off with ^KH    prev. screen ^[,    next screen ^[.     \i
\i \i\|\uMACROS\u         \|\uMISC\u            \|\uSCROLL\u    \|\uSHELL\u       \|\uGOTO\u       \|\uI-SEARCH\u     \|\i \i
\i \i\|^K[ 0-9 Record \|^K SPACE status \|^[W Up    \|^K' Window  \|^[B To ^KB \|^[R Backwards\|\i \i
\i \i\|^K]     Stop   \|^K\\ Repeat      \|^[Z Down  \|^[! Command \|^[K To ^KK \|^[S Forwards \|\i \i
\i \i\|^K 0-9  Play   \|\uINSERT\u          \|^K< Left  \|\uQUOTE\u       \|\uDELETE\u     \|\uBOOKMARKS\u    \|\i \i
\i \i\|^K?     Query  \|^] split line   \|^K> Right \|^[' Ctrl-   \|^[Y yank   \|^[ 0-9 Goto  \|\i \i
\i \i\|^[D     Dump   \|^SPACE ins space\|          \|^\\ Meta-    \|^[O line<  \|^[^[   Set   \|\i \i
}

{Programs
\i   Help Screen    \|turn off with ^KH    prev. screen ^[,    next screen ^[.     \i
\i \i\|\uGOTO\u                 \|\uINDENT\u   \|\uCOMPILING\u          \uQUICK\u                       \|\i \i
\i \i\|^G  Matching ( [ {   \|^K, less \|^[C Compile & parse ^G  find word under cursor \|\i \i
\i \i\|^K- Previous place   \|^K. more \|^[G Grep & parse    ^[ENTER complete word      \|\i \i
\i \i\|^K= Next place         \|       \|^[= To next error   ^[Y paste deleted text     \|\i \i
\i \i\|^K; Tags file search   \|       \|^[- To prev. error  ^[^Y cycle through deleted \|\i \i
\i \i\|                       \|       \|^[ SP Jump to error                            \|\i \i
}

{Search
\i   Help Screen    \|turn off with ^KH    prev. screen ^[,    next screen ^[.     \i
\i \iSpecial search sequences:                                                    \|\i \i
\i \i    \\^  \\$  matches beg./end of line      \\?     match any single char       \|\i \i
\i \i    \\<  \\>  matches beg./end of word      \\*     match 0 or more chars       \|\i \i
\i \i    \\c      matches balanced C expression \\\\     matches a \\                 \|\i \i
\i \i    \\[..]   matches one of a set          \\n     matches a newline           \|\i \i
\i \i    \\+      matches 0 or more of the character which follows the \\+          \|\i \i
\i \iSpecial replace sequences:                                                   \|\i \i
\i \i    \\&      replaced with text which matched search string                   \|\i \i
\i \i    \\0 - 9  replaced with text which matched Nth \\*, \\?, \\c, \\+, or \\[..]    \|\i \i
\i \i    \\\\      replaced with \\               \\n     replaced with newline       \|\i \i
}

{SearchOptions
\i   Help Screen    \|turn off with ^KH    prev. screen ^[,    next screen ^[.     \i
\i \iSearch options:                                                              \|\i \i
\i \i   r Replace                                                                 \|\i \i
\i \i   k Restrict search to highlighted block, which can be rectangular          \|\i \i
\i \i   b Search backward instead of forward                                      \|\i \i
\i \i   i Ignore case                                                             \|\i \i
\i \i   a Search across all loaded files                                          \|\i \i
\i \i   e Search across all files in Grep or Compile error list                   \|\i \i
\i \i   w Wrap to beginning of file for this search                               \|\i \i
\i \i   n Do not wrap to beginning of file for this search                        \|\i \i
\i \i   nnn Perform exaclty nnn replacements                                      \|\i \i
}

{Math
\i   Help Screen    \|turn off with ^KH    prev. screen ^[,    next screen ^[.     \i
\i \i \uCOMMANDS\u (hit ESC m for math)  \uFUNCTIONS\u                                    \|\i \i
\i \i     hex hex display mode       sin cos tab asin acos atan                   \|\i \i
\i \i     dec decimal mode           sinh cosh tanh asinh acosh atanh             \|\i \i
\i \i     ins type result into file  sqrt cbrt exp ln log                         \|\i \i
\i \i    eval evaluate block         int floor ceil abs erg ergc                  \|\i \i
\i \i    0xff enter number in hex    joe(..macro..) - runs an editor macro        \|\i \i
\i \i    3e-4 floating point decimal \uBLOCK\u                                        \|\i \i
\i \i    a=10 assign a variable      sum cnt  Sum, count                          \|\i \i
\i \i 2+3:ins multiple commands      avg dev  Average, std. deviation             \|\i \i
\i \i    e pi constants              \uOPERATORS\u                                    \|\i \i
\i \i     ans previous result        ! ^  * / %  + -  < <= > >= == !=  &&  ||  ? :\|\i \i
}

{Names
\i   Help Screen    \|turn off with ^KH    prev. screen ^[,    next screen ^[.     \i
\i \i Hit TAB at file name prompts to generate menu of file names                 \|\i \i
\i \i Or use up/down keys to access history of previously entered names           \|\i \i
\i \i Special file names:                                                         \|\i \i
\i \i      !command                 Pipe in/out of a shell command                \|\i \i
\i \i      >>filename               Append to a file                              \|\i \i
\i \i      -                        Read/Write to/from standard I/O               \|\i \i
\i \i      filename,START,SIZE      Read/Write a part of a file/device            \|\i \i
\i \i          Give START/SIZE in decimal (255), octal (0377) or hex (0xFF)       \|\i \i
}

{Joe
\i   Help Screen    \|turn off with ^KH    prev. screen ^[,                        \i
\i \i Send bug reports to: http://sourceforge.net/projects/joe-editor \|\i \i
\i \i \|\i \i
\i \i  default joerc file is here /usr/share/joe/joerc \|\i \i
\i \i  additional documentation can be found here /usr/share/joe/doc \|\i \i
}

 FOURTH SECTION: Key bindings:

:include keys-rxvt

